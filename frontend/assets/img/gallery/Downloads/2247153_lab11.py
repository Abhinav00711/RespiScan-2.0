# -*- coding: utf-8 -*-
"""2247153_LAB11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hWEW6CwXvmASrSNNlGppnIJaL6AcydX4
"""

import pandas as pd
df= pd.read_csv('/content/Salaries.csv')
print(df.dtypes)
print(df.columns)

df

df.shape

print("Attributes: ",df.shape[1])
print("Samples: ",df.shape[0])

"""First 5 attributes and all samples"""

df.iloc[:,0:6]

"""11 to 15 samples of attributes 4 and 8"""

df.iloc[11:16,[4,8]]

df.iloc[10:11,[5]]

data=df.iloc[:,4:6]
data=pd.DataFrame(data)
data

arr=data.to_numpy()
arr

df.describe()

print(df[df['salary']==df['salary'].max()]['job_title'])

print(df['remote_ratio'].mean())

df['job_title'].nunique()

df['job_title'].unique()

print(df[df['salary_in_usd']==df['salary_in_usd'].min()]['company_location'])

print(df[df['employment_type']=='PT'].count())

print("Number of different company size:", df['company_size'].nunique())
df['company_size'].unique()

import matplotlib.pyplot as plt 
import numpy as np

table = pd.pivot_table(data=df,index='job_title',values='salary_in_usd',aggfunc=np.sum)
table

fig = plt.figure(figsize = (150, 75))
plt.bar(df['job_title'], df['salary_in_usd'], color ='maroon',width = 0.9)
plt.xlabel("Job Title")
plt.ylabel("Salaries in USD")
plt.title("Salaries of different Jobs")
plt.show()

cm=0
cs=0
cl=0
for x in df['company_size']:
  if x=='M':
    cm+=1
  elif x=='L':
    cl+=1
  else:
    cs+=1
Tasks=[cs,cm,cl]

fig = plt.figure(figsize = (15,10))
my_labels = 'Small','Medium','Large'
my_colors = ['lightblue','lightsteelblue','silver']
my_explode = (0, 0.1, 0)
plt.pie(Tasks, labels=my_labels, autopct='%1.1f%%', startangle=15, shadow = True, colors=my_colors, explode=my_explode)
plt.title('Company Size')
plt.axis('equal')
plt.show()

fig = plt.figure(figsize = (12,13))
plt.scatter(df['salary'], df['salary_in_usd'], c ="blue")
plt.show()

fig = plt.figure(figsize = (55, 55))
plt.plot(df['employee_residence'], df['salary_in_usd'], '-.')
plt.xlabel("X-axis data")
plt.ylabel("Y-axis data")
plt.title('multiple plots')
plt.show()

